/**
 * Generated by karavan build tools - do NOT edit this file!
 */
import { CamelElement } from "../model/IntegrationDefinition";
import { ProcessorDefinition, BeansDeserializer, DataFormatsDefinitionDeserializer, ErrorHandlerDeserializer, OutputAwareFromDefinition, AggregateDefinition, BeanDefinition, BeanFactoryDefinition, CatchDefinition, ChoiceDefinition, CircuitBreakerDefinition, ClaimCheckDefinition, ContextScanDefinition, ConvertBodyDefinition, ConvertHeaderDefinition, ConvertVariableDefinition, DataFormatDefinition, DelayDefinition, DynamicRouterDefinition, EnrichDefinition, ErrorHandlerDefinition, ExpressionSubElementDefinition, FaultToleranceConfigurationDefinition, FilterDefinition, FinallyDefinition, FromDefinition, GlobalOptionDefinition, GlobalOptionsDefinition, IdempotentConsumerDefinition, InputTypeDefinition, InterceptDefinition, InterceptFromDefinition, InterceptSendToEndpointDefinition, KameletDefinition, LoadBalanceDefinition, LogDefinition, LoopDefinition, MarshalDefinition, MulticastDefinition, OnCompletionDefinition, OnExceptionDefinition, OnFallbackDefinition, OnWhenDefinition, OptimisticLockRetryPolicyDefinition, OtherwiseDefinition, OutputDefinition, OutputTypeDefinition, PackageScanDefinition, PausableDefinition, PipelineDefinition, PolicyDefinition, PollDefinition, PollEnrichDefinition, ProcessDefinition, PropertyDefinition, PropertyExpressionDefinition, RecipientListDefinition, RedeliveryPolicyDefinition, RemoveHeaderDefinition, RemoveHeadersDefinition, RemovePropertiesDefinition, RemovePropertyDefinition, RemoveVariableDefinition, ResequenceDefinition, Resilience4jConfigurationDefinition, RestContextRefDefinition, ResumableDefinition, RollbackDefinition, RouteBuilderDefinition, RouteConfigurationContextRefDefinition, RouteConfigurationDefinition, RouteContextRefDefinition, RouteDefinition, RouteTemplateDefinition, RouteTemplateParameterDefinition, RoutingSlipDefinition, SagaActionUriDefinition, SagaDefinition, SamplingDefinition, ScriptDefinition, SetBodyDefinition, SetExchangePatternDefinition, SetHeaderDefinition, SetHeadersDefinition, SetPropertyDefinition, SetVariableDefinition, SetVariablesDefinition, SortDefinition, SplitDefinition, StepDefinition, StopDefinition, TemplatedRouteDefinition, TemplatedRouteParameterDefinition, ThreadPoolProfileDefinition, ThreadsDefinition, ThrottleDefinition, ThrowExceptionDefinition, ToDefinition, ToDynamicDefinition, TokenizerDefinition, TokenizerImplementationDefinition, TransactedDefinition, TransformDefinition, TryDefinition, UnmarshalDefinition, ValidateDefinition, ValueDefinition, WhenDefinition, WireTapDefinition, BeanConstructorDefinition, BeanConstructorsDefinition, BeanPropertiesDefinition, BeanPropertyDefinition, ComponentScanDefinition, BatchResequencerConfig, StreamResequencerConfig, ASN1DataFormat, AvroDataFormat, BarcodeDataFormat, Base64DataFormat, BeanioDataFormat, BindyDataFormat, CBORDataFormat, CryptoDataFormat, CsvDataFormat, CustomDataFormat, DataFormatsDefinition, FhirJsonDataFormat, FhirXmlDataFormat, FlatpackDataFormat, FuryDataFormat, GrokDataFormat, GzipDeflaterDataFormat, HL7DataFormat, IcalDataFormat, JacksonXMLDataFormat, JaxbDataFormat, JsonApiDataFormat, JsonDataFormat, LZFDataFormat, MimeMultipartDataFormat, PGPDataFormat, ParquetAvroDataFormat, ProtobufDataFormat, RssDataFormat, SmooksDataFormat, SoapDataFormat, SwiftMtDataFormat, SwiftMxDataFormat, SyslogDataFormat, TarFileDataFormat, ThriftDataFormat, TidyMarkupDataFormat, UniVocityCsvDataFormat, UniVocityFixedDataFormat, UniVocityHeader, UniVocityTsvDataFormat, XMLSecurityDataFormat, YAMLDataFormat, YAMLTypeFilterDefinition, ZipDeflaterDataFormat, ZipFileDataFormat, DeadLetterChannelDefinition, DefaultErrorHandlerDefinition, JtaTransactionErrorHandlerDefinition, NoErrorHandlerDefinition, RefErrorHandlerDefinition, SpringTransactionErrorHandlerDefinition, CSimpleExpression, ConstantExpression, DatasonnetExpression, ExchangePropertyExpression, ExpressionDefinition, GroovyExpression, HeaderExpression, Hl7TerserExpression, JavaExpression, JavaScriptExpression, JqExpression, JsonPathExpression, LanguageExpression, MethodCallExpression, MvelExpression, OgnlExpression, PythonExpression, RefExpression, SimpleExpression, SpELExpression, TokenizerExpression, VariableExpression, WasmExpression, XMLTokenizerExpression, XPathExpression, XQueryExpression, CustomLoadBalancerDefinition, FailoverLoadBalancerDefinition, RandomLoadBalancerDefinition, RoundRobinLoadBalancerDefinition, StickyLoadBalancerDefinition, TopicLoadBalancerDefinition, WeightedLoadBalancerDefinition, ApiKeyDefinition, BasicAuthDefinition, BearerTokenDefinition, DeleteDefinition, GetDefinition, HeadDefinition, MutualTLSDefinition, OAuth2Definition, OpenApiDefinition, OpenIdConnectDefinition, ParamDefinition, PatchDefinition, PostDefinition, PutDefinition, ResponseHeaderDefinition, ResponseMessageDefinition, RestBindingDefinition, RestConfigurationDefinition, RestDefinition, RestPropertyDefinition, RestSecuritiesDefinition, RestsDefinition, SecurityDefinition, LangChain4jCharacterTokenizerDefinition, LangChain4jLineTokenizerDefinition, LangChain4jParagraphTokenizerDefinition, LangChain4jSentenceTokenizerDefinition, LangChain4jTokenizerDefinition, LangChain4jWordTokenizerDefinition, CustomTransformerDefinition, DataFormatTransformerDefinition, EndpointTransformerDefinition, LoadTransformerDefinition, TransformersDefinition, CustomValidatorDefinition, EndpointValidatorDefinition, PredicateValidatorDefinition, ValidatorsDefinition } from '../model/CamelDefinition';
export declare class CamelDefinitionYamlStep {
    static readProcessorDefinition: (element: any) => ProcessorDefinition;
    static readBeansDeserializer: (element: any) => BeansDeserializer;
    static readDataFormatsDefinitionDeserializer: (element: any) => DataFormatsDefinitionDeserializer;
    static readErrorHandlerDeserializer: (element: any) => ErrorHandlerDeserializer;
    static readOutputAwareFromDefinition: (element: any) => OutputAwareFromDefinition;
    static readAggregateDefinition: (element: any) => AggregateDefinition;
    static readBeanDefinition: (element: any) => BeanDefinition;
    static readBeanFactoryDefinition: (element: any) => BeanFactoryDefinition;
    static readCatchDefinition: (element: any) => CatchDefinition;
    static readChoiceDefinition: (element: any) => ChoiceDefinition;
    static readCircuitBreakerDefinition: (element: any) => CircuitBreakerDefinition;
    static readClaimCheckDefinition: (element: any) => ClaimCheckDefinition;
    static readContextScanDefinition: (element: any) => ContextScanDefinition;
    static readConvertBodyDefinition: (element: any) => ConvertBodyDefinition;
    static readConvertHeaderDefinition: (element: any) => ConvertHeaderDefinition;
    static readConvertVariableDefinition: (element: any) => ConvertVariableDefinition;
    static readDataFormatDefinition: (element: any) => DataFormatDefinition;
    static readDelayDefinition: (element: any) => DelayDefinition;
    static readDynamicRouterDefinition: (element: any) => DynamicRouterDefinition;
    static readEnrichDefinition: (element: any) => EnrichDefinition;
    static readErrorHandlerDefinition: (element: any) => ErrorHandlerDefinition;
    static readExpressionSubElementDefinition: (element: any) => ExpressionSubElementDefinition;
    static readFaultToleranceConfigurationDefinition: (element: any) => FaultToleranceConfigurationDefinition;
    static readFilterDefinition: (element: any) => FilterDefinition;
    static readFinallyDefinition: (element: any) => FinallyDefinition;
    static readFromDefinition: (element: any) => FromDefinition;
    static readGlobalOptionDefinition: (element: any) => GlobalOptionDefinition;
    static readGlobalOptionsDefinition: (element: any) => GlobalOptionsDefinition;
    static readIdempotentConsumerDefinition: (element: any) => IdempotentConsumerDefinition;
    static readInputTypeDefinition: (element: any) => InputTypeDefinition;
    static readInterceptDefinition: (element: any) => InterceptDefinition;
    static readInterceptFromDefinition: (element: any) => InterceptFromDefinition;
    static readInterceptSendToEndpointDefinition: (element: any) => InterceptSendToEndpointDefinition;
    static readKameletDefinition: (element: any) => KameletDefinition;
    static readLoadBalanceDefinition: (element: any) => LoadBalanceDefinition;
    static readLogDefinition: (element: any) => LogDefinition;
    static readLoopDefinition: (element: any) => LoopDefinition;
    static readMarshalDefinition: (element: any) => MarshalDefinition;
    static readMulticastDefinition: (element: any) => MulticastDefinition;
    static readOnCompletionDefinition: (element: any) => OnCompletionDefinition;
    static readOnExceptionDefinition: (element: any) => OnExceptionDefinition;
    static readOnFallbackDefinition: (element: any) => OnFallbackDefinition;
    static readOnWhenDefinition: (element: any) => OnWhenDefinition;
    static readOptimisticLockRetryPolicyDefinition: (element: any) => OptimisticLockRetryPolicyDefinition;
    static readOtherwiseDefinition: (element: any) => OtherwiseDefinition;
    static readOutputDefinition: (element: any) => OutputDefinition;
    static readOutputTypeDefinition: (element: any) => OutputTypeDefinition;
    static readPackageScanDefinition: (element: any) => PackageScanDefinition;
    static readPausableDefinition: (element: any) => PausableDefinition;
    static readPipelineDefinition: (element: any) => PipelineDefinition;
    static readPolicyDefinition: (element: any) => PolicyDefinition;
    static readPollDefinition: (element: any) => PollDefinition;
    static readPollEnrichDefinition: (element: any) => PollEnrichDefinition;
    static readProcessDefinition: (element: any) => ProcessDefinition;
    static readPropertyDefinition: (element: any) => PropertyDefinition;
    static readPropertyExpressionDefinition: (element: any) => PropertyExpressionDefinition;
    static readRecipientListDefinition: (element: any) => RecipientListDefinition;
    static readRedeliveryPolicyDefinition: (element: any) => RedeliveryPolicyDefinition;
    static readRemoveHeaderDefinition: (element: any) => RemoveHeaderDefinition;
    static readRemoveHeadersDefinition: (element: any) => RemoveHeadersDefinition;
    static readRemovePropertiesDefinition: (element: any) => RemovePropertiesDefinition;
    static readRemovePropertyDefinition: (element: any) => RemovePropertyDefinition;
    static readRemoveVariableDefinition: (element: any) => RemoveVariableDefinition;
    static readResequenceDefinition: (element: any) => ResequenceDefinition;
    static readResilience4jConfigurationDefinition: (element: any) => Resilience4jConfigurationDefinition;
    static readRestContextRefDefinition: (element: any) => RestContextRefDefinition;
    static readResumableDefinition: (element: any) => ResumableDefinition;
    static readRollbackDefinition: (element: any) => RollbackDefinition;
    static readRouteBuilderDefinition: (element: any) => RouteBuilderDefinition;
    static readRouteConfigurationContextRefDefinition: (element: any) => RouteConfigurationContextRefDefinition;
    static readRouteConfigurationDefinition: (element: any) => RouteConfigurationDefinition;
    static readRouteContextRefDefinition: (element: any) => RouteContextRefDefinition;
    static readRouteDefinition: (element: any) => RouteDefinition;
    static readRouteTemplateDefinition: (element: any) => RouteTemplateDefinition;
    static readRouteTemplateParameterDefinition: (element: any) => RouteTemplateParameterDefinition;
    static readRoutingSlipDefinition: (element: any) => RoutingSlipDefinition;
    static readSagaActionUriDefinition: (element: any) => SagaActionUriDefinition;
    static readSagaDefinition: (element: any) => SagaDefinition;
    static readSamplingDefinition: (element: any) => SamplingDefinition;
    static readScriptDefinition: (element: any) => ScriptDefinition;
    static readSetBodyDefinition: (element: any) => SetBodyDefinition;
    static readSetExchangePatternDefinition: (element: any) => SetExchangePatternDefinition;
    static readSetHeaderDefinition: (element: any) => SetHeaderDefinition;
    static readSetHeadersDefinition: (element: any) => SetHeadersDefinition;
    static readSetPropertyDefinition: (element: any) => SetPropertyDefinition;
    static readSetVariableDefinition: (element: any) => SetVariableDefinition;
    static readSetVariablesDefinition: (element: any) => SetVariablesDefinition;
    static readSortDefinition: (element: any) => SortDefinition;
    static readSplitDefinition: (element: any) => SplitDefinition;
    static readStepDefinition: (element: any) => StepDefinition;
    static readStopDefinition: (element: any) => StopDefinition;
    static readTemplatedRouteDefinition: (element: any) => TemplatedRouteDefinition;
    static readTemplatedRouteParameterDefinition: (element: any) => TemplatedRouteParameterDefinition;
    static readThreadPoolProfileDefinition: (element: any) => ThreadPoolProfileDefinition;
    static readThreadsDefinition: (element: any) => ThreadsDefinition;
    static readThrottleDefinition: (element: any) => ThrottleDefinition;
    static readThrowExceptionDefinition: (element: any) => ThrowExceptionDefinition;
    static readToDefinition: (element: any) => ToDefinition;
    static readToDynamicDefinition: (element: any) => ToDynamicDefinition;
    static readTokenizerDefinition: (element: any) => TokenizerDefinition;
    static readTokenizerImplementationDefinition: (element: any) => TokenizerImplementationDefinition;
    static readTransactedDefinition: (element: any) => TransactedDefinition;
    static readTransformDefinition: (element: any) => TransformDefinition;
    static readTryDefinition: (element: any) => TryDefinition;
    static readUnmarshalDefinition: (element: any) => UnmarshalDefinition;
    static readValidateDefinition: (element: any) => ValidateDefinition;
    static readValueDefinition: (element: any) => ValueDefinition;
    static readWhenDefinition: (element: any) => WhenDefinition;
    static readWireTapDefinition: (element: any) => WireTapDefinition;
    static readBeanConstructorDefinition: (element: any) => BeanConstructorDefinition;
    static readBeanConstructorsDefinition: (element: any) => BeanConstructorsDefinition;
    static readBeanPropertiesDefinition: (element: any) => BeanPropertiesDefinition;
    static readBeanPropertyDefinition: (element: any) => BeanPropertyDefinition;
    static readComponentScanDefinition: (element: any) => ComponentScanDefinition;
    static readBatchResequencerConfig: (element: any) => BatchResequencerConfig;
    static readStreamResequencerConfig: (element: any) => StreamResequencerConfig;
    static readASN1DataFormat: (element: any) => ASN1DataFormat;
    static readAvroDataFormat: (element: any) => AvroDataFormat;
    static readBarcodeDataFormat: (element: any) => BarcodeDataFormat;
    static readBase64DataFormat: (element: any) => Base64DataFormat;
    static readBeanioDataFormat: (element: any) => BeanioDataFormat;
    static readBindyDataFormat: (element: any) => BindyDataFormat;
    static readCBORDataFormat: (element: any) => CBORDataFormat;
    static readCryptoDataFormat: (element: any) => CryptoDataFormat;
    static readCsvDataFormat: (element: any) => CsvDataFormat;
    static readCustomDataFormat: (element: any) => CustomDataFormat;
    static readDataFormatsDefinition: (element: any) => DataFormatsDefinition;
    static readFhirJsonDataFormat: (element: any) => FhirJsonDataFormat;
    static readFhirXmlDataFormat: (element: any) => FhirXmlDataFormat;
    static readFlatpackDataFormat: (element: any) => FlatpackDataFormat;
    static readFuryDataFormat: (element: any) => FuryDataFormat;
    static readGrokDataFormat: (element: any) => GrokDataFormat;
    static readGzipDeflaterDataFormat: (element: any) => GzipDeflaterDataFormat;
    static readHL7DataFormat: (element: any) => HL7DataFormat;
    static readIcalDataFormat: (element: any) => IcalDataFormat;
    static readJacksonXMLDataFormat: (element: any) => JacksonXMLDataFormat;
    static readJaxbDataFormat: (element: any) => JaxbDataFormat;
    static readJsonApiDataFormat: (element: any) => JsonApiDataFormat;
    static readJsonDataFormat: (element: any) => JsonDataFormat;
    static readLZFDataFormat: (element: any) => LZFDataFormat;
    static readMimeMultipartDataFormat: (element: any) => MimeMultipartDataFormat;
    static readPGPDataFormat: (element: any) => PGPDataFormat;
    static readParquetAvroDataFormat: (element: any) => ParquetAvroDataFormat;
    static readProtobufDataFormat: (element: any) => ProtobufDataFormat;
    static readRssDataFormat: (element: any) => RssDataFormat;
    static readSmooksDataFormat: (element: any) => SmooksDataFormat;
    static readSoapDataFormat: (element: any) => SoapDataFormat;
    static readSwiftMtDataFormat: (element: any) => SwiftMtDataFormat;
    static readSwiftMxDataFormat: (element: any) => SwiftMxDataFormat;
    static readSyslogDataFormat: (element: any) => SyslogDataFormat;
    static readTarFileDataFormat: (element: any) => TarFileDataFormat;
    static readThriftDataFormat: (element: any) => ThriftDataFormat;
    static readTidyMarkupDataFormat: (element: any) => TidyMarkupDataFormat;
    static readUniVocityCsvDataFormat: (element: any) => UniVocityCsvDataFormat;
    static readUniVocityFixedDataFormat: (element: any) => UniVocityFixedDataFormat;
    static readUniVocityHeader: (element: any) => UniVocityHeader;
    static readUniVocityTsvDataFormat: (element: any) => UniVocityTsvDataFormat;
    static readXMLSecurityDataFormat: (element: any) => XMLSecurityDataFormat;
    static readYAMLDataFormat: (element: any) => YAMLDataFormat;
    static readYAMLTypeFilterDefinition: (element: any) => YAMLTypeFilterDefinition;
    static readZipDeflaterDataFormat: (element: any) => ZipDeflaterDataFormat;
    static readZipFileDataFormat: (element: any) => ZipFileDataFormat;
    static readDeadLetterChannelDefinition: (element: any) => DeadLetterChannelDefinition;
    static readDefaultErrorHandlerDefinition: (element: any) => DefaultErrorHandlerDefinition;
    static readJtaTransactionErrorHandlerDefinition: (element: any) => JtaTransactionErrorHandlerDefinition;
    static readNoErrorHandlerDefinition: (element: any) => NoErrorHandlerDefinition;
    static readRefErrorHandlerDefinition: (element: any) => RefErrorHandlerDefinition;
    static readSpringTransactionErrorHandlerDefinition: (element: any) => SpringTransactionErrorHandlerDefinition;
    static readCSimpleExpression: (element: any) => CSimpleExpression;
    static readConstantExpression: (element: any) => ConstantExpression;
    static readDatasonnetExpression: (element: any) => DatasonnetExpression;
    static readExchangePropertyExpression: (element: any) => ExchangePropertyExpression;
    static readExpressionDefinition: (element: any) => ExpressionDefinition;
    static readGroovyExpression: (element: any) => GroovyExpression;
    static readHeaderExpression: (element: any) => HeaderExpression;
    static readHl7TerserExpression: (element: any) => Hl7TerserExpression;
    static readJavaExpression: (element: any) => JavaExpression;
    static readJavaScriptExpression: (element: any) => JavaScriptExpression;
    static readJqExpression: (element: any) => JqExpression;
    static readJsonPathExpression: (element: any) => JsonPathExpression;
    static readLanguageExpression: (element: any) => LanguageExpression;
    static readMethodCallExpression: (element: any) => MethodCallExpression;
    static readMvelExpression: (element: any) => MvelExpression;
    static readOgnlExpression: (element: any) => OgnlExpression;
    static readPythonExpression: (element: any) => PythonExpression;
    static readRefExpression: (element: any) => RefExpression;
    static readSimpleExpression: (element: any) => SimpleExpression;
    static readSpELExpression: (element: any) => SpELExpression;
    static readTokenizerExpression: (element: any) => TokenizerExpression;
    static readVariableExpression: (element: any) => VariableExpression;
    static readWasmExpression: (element: any) => WasmExpression;
    static readXMLTokenizerExpression: (element: any) => XMLTokenizerExpression;
    static readXPathExpression: (element: any) => XPathExpression;
    static readXQueryExpression: (element: any) => XQueryExpression;
    static readCustomLoadBalancerDefinition: (element: any) => CustomLoadBalancerDefinition;
    static readFailoverLoadBalancerDefinition: (element: any) => FailoverLoadBalancerDefinition;
    static readRandomLoadBalancerDefinition: (element: any) => RandomLoadBalancerDefinition;
    static readRoundRobinLoadBalancerDefinition: (element: any) => RoundRobinLoadBalancerDefinition;
    static readStickyLoadBalancerDefinition: (element: any) => StickyLoadBalancerDefinition;
    static readTopicLoadBalancerDefinition: (element: any) => TopicLoadBalancerDefinition;
    static readWeightedLoadBalancerDefinition: (element: any) => WeightedLoadBalancerDefinition;
    static readApiKeyDefinition: (element: any) => ApiKeyDefinition;
    static readBasicAuthDefinition: (element: any) => BasicAuthDefinition;
    static readBearerTokenDefinition: (element: any) => BearerTokenDefinition;
    static readDeleteDefinition: (element: any) => DeleteDefinition;
    static readGetDefinition: (element: any) => GetDefinition;
    static readHeadDefinition: (element: any) => HeadDefinition;
    static readMutualTLSDefinition: (element: any) => MutualTLSDefinition;
    static readOAuth2Definition: (element: any) => OAuth2Definition;
    static readOpenApiDefinition: (element: any) => OpenApiDefinition;
    static readOpenIdConnectDefinition: (element: any) => OpenIdConnectDefinition;
    static readParamDefinition: (element: any) => ParamDefinition;
    static readPatchDefinition: (element: any) => PatchDefinition;
    static readPostDefinition: (element: any) => PostDefinition;
    static readPutDefinition: (element: any) => PutDefinition;
    static readResponseHeaderDefinition: (element: any) => ResponseHeaderDefinition;
    static readResponseMessageDefinition: (element: any) => ResponseMessageDefinition;
    static readRestBindingDefinition: (element: any) => RestBindingDefinition;
    static readRestConfigurationDefinition: (element: any) => RestConfigurationDefinition;
    static readRestDefinition: (element: any) => RestDefinition;
    static readRestPropertyDefinition: (element: any) => RestPropertyDefinition;
    static readRestSecuritiesDefinition: (element: any) => RestSecuritiesDefinition;
    static readRestsDefinition: (element: any) => RestsDefinition;
    static readSecurityDefinition: (element: any) => SecurityDefinition;
    static readLangChain4jCharacterTokenizerDefinition: (element: any) => LangChain4jCharacterTokenizerDefinition;
    static readLangChain4jLineTokenizerDefinition: (element: any) => LangChain4jLineTokenizerDefinition;
    static readLangChain4jParagraphTokenizerDefinition: (element: any) => LangChain4jParagraphTokenizerDefinition;
    static readLangChain4jSentenceTokenizerDefinition: (element: any) => LangChain4jSentenceTokenizerDefinition;
    static readLangChain4jTokenizerDefinition: (element: any) => LangChain4jTokenizerDefinition;
    static readLangChain4jWordTokenizerDefinition: (element: any) => LangChain4jWordTokenizerDefinition;
    static readCustomTransformerDefinition: (element: any) => CustomTransformerDefinition;
    static readDataFormatTransformerDefinition: (element: any) => DataFormatTransformerDefinition;
    static readEndpointTransformerDefinition: (element: any) => EndpointTransformerDefinition;
    static readLoadTransformerDefinition: (element: any) => LoadTransformerDefinition;
    static readTransformersDefinition: (element: any) => TransformersDefinition;
    static readCustomValidatorDefinition: (element: any) => CustomValidatorDefinition;
    static readEndpointValidatorDefinition: (element: any) => EndpointValidatorDefinition;
    static readPredicateValidatorDefinition: (element: any) => PredicateValidatorDefinition;
    static readValidatorsDefinition: (element: any) => ValidatorsDefinition;
    static readStep: (body: any, clone?: boolean) => CamelElement;
    static readSteps: (elements: any[] | undefined) => CamelElement[];
}
